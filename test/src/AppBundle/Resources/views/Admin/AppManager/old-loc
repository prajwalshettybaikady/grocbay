
{% extends '@AppBundle/Admin/base.html.twig' %}


{% block body %}
      <link href = "https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css"
         rel = "stylesheet">
      <script src = "https://code.jquery.com/jquery-1.10.2.js"></script>
      <script src = "https://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>
      
      <!-- Javascript -->
      <script>
         $(function() {
            $( "#datepicker-13" ).datepicker({
                  dateFormat:"dd-mm-yy",
            });

         });

      </script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/selectize.js/0.12.6/js/standalone/selectize.min.js" integrity="sha256-+C0A5Ilqmu4QcSPxrlGpaZxJ04VjsRjKu+G82kl5UJk=" crossorigin="anonymous"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/selectize.js/0.12.6/css/selectize.bootstrap3.min.css" integrity="sha256-ze/OEYGcFbPRmvCnrSeKbRTtjG4vGLHXgOqsyLFTRjg=" crossorigin="anonymous" />
{# {{ dump(res) }} #}
<!-- Modal -->

<div class="row">
    <div class="col-12">
        <div class="card">
                <div class="card-body">
                    <div class="col-xs-12">
                        <span class="pull-right">
                    {#      <a href="#" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#uploadCSV">Upload CSV</a> #}
                          
                        </span>
                    </div>

                    <div>
                    <form action="{{ path('manage_restaurant_add_stock_item') }}" method="post">
                                       <h2>Manage Delivery Locations</h2>

                        <hr>
                       
 <div class="table-responsive m-t-10">
  <div class="row">
      <div class="col-10">
<div class="form-group">
   <label>Search Location name *</label>
  <div id="locationField">
      <input id="autocomplete"
             placeholder="Enter your address"
             onFocus="geolocate()"
             type="text" class="form-control" />
    </div>
  </div>
</div>
     <div class="col-2">
<div class="form-group" style="margin-top:9px;"><br>

<button class="btn btn-success" type="button">add</button>  
  </div>
</div>
</div>
                        <table id="myTable" class="table table-hovered">
                            <thead>
                                <tr>
                                    <th>Location</th>
                                     <th>Zipcode</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                               
                            </tbody>
                        </table>
                    </div>
                    <button class="btn btn-success" type="submit" style="float:right;">Save</button>
                    </form> 
                    </div>
     
                </div>
            </div>
    </div>
</div>


{# end modal #}
{% endblock %}

{% block scripts %}

<script src="/assets/plugins/datatables/jquery.dataTables.min.js"></script>
<script>

 function removeVariant(obj){
// $(this).attr("data-usr" , '');

        $(obj).parent().parent().remove();

    }
    

</script>

  <script>
// This sample uses the Autocomplete widget to help the user select a
// place, then it retrieves the address components associated with that
// place, and then it populates the form fields with those details.
// This sample requires the Places library. Include the libraries=places
// parameter when you first load the API. For example:
// <script
// src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

var placeSearch, autocomplete;

var componentForm = {
  street_number: 'short_name',
  route: 'long_name',
  locality: 'long_name',
  administrative_area_level_1: 'short_name',
  country: 'long_name',
  postal_code: 'short_name'
};
function initAutocomplete() {
  // Create the autocomplete object, restricting the search predictions to
  // geographical location types.
  autocomplete = new google.maps.places.Autocomplete(
      document.getElementById('autocomplete'), {types: ['geocode']});

  // Avoid paying for data that you don't need by restricting the set of
  // place fields that are returned to just the address components.
  autocomplete.setFields(['address_component']);

  // When the user selects an address from the drop-down, populate the
  // address fields in the form.
  autocomplete.addListener('place_changed', fillInAddress);
}

function fillInAddress() {
  // Get the place details from the autocomplete object.
  var place = autocomplete.getPlace();


  for (var component in componentForm) {
    // document.getElementById(component).value = '';
    // document.getElementById(component).disabled = false;
  }

  // Get each component of the address from the place details,
  // and then fill-in the corresponding field on the form.
  for (var i = 0; i < place.address_components.length; i++) {
    var addressType = place.address_components[i].types[0];
    if (componentForm[addressType]) {
      var val = place.address_components[i][componentForm[addressType]];
       
$('#myTable').append('<tr><td>'+val+'</td><td></td><td>remove</td></tr>');
      // document.getElementById(addressType).value = val;
    }
  }
}

// Bias the autocomplete object to the user's geographical location,
// as supplied by the browser's 'navigator.geolocation' object.
function geolocate() {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      var geolocation = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };
      var circle = new google.maps.Circle(
          {center: geolocation, radius: position.coords.accuracy});

      autocomplete.setBounds(circle.getBounds());
    });

  }
}
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAqpNRcHCA-YkFDmY4v_TmOAeUltT3-ezY&libraries=places&callback=initAutocomplete"
        async defer></script>
 
{% endblock %}
